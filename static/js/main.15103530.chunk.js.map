{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api_helpers.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getData","url","a","fetch","response","json","FindMovie","addMovie","useState","queryMovie","setQueryMovie","newMovie","setNewMovie","error","setError","replay","setReplay","searchedMovie","getedMovie","movieFromApi","Title","Plot","Poster","imdbID","Response","onSubmit","event","preventDefault","some","film","htmlFor","type","id","placeholder","value","onChange","target","replace","onClick","App","state","data","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15103530.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","export const API_URL = 'https://www.omdbapi.com/?apikey=2f56ed46&t='\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n}\n","import React, { useState, FC } from 'react';\n\nimport './FindMovie.scss';\nimport { API_URL, getData } from '../../api_helpers';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void\n  movies: Movie[]\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie, movies }) => {\n  const [queryMovie, setQueryMovie] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [replay, setReplay] = useState(false);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: title } = event.target;\n    const regExp = /^\\s/;\n\n    setQueryMovie(title.replace(regExp, ''));\n    setError(false);\n    setReplay(false);\n  }\n\n  const searchedMovie = async () => {\n    const getedMovie = () => {\n      return getData(`${API_URL}${queryMovie}`);\n    };\n    const movieFromApi = await getedMovie();\n\n    const {\n          Title: title,\n          Plot: description,\n          Poster: imgUrl,\n          imdbID: imdbId,\n          Response: response,\n        } = movieFromApi;\n\n    if (response === 'True') {\n      const imdbUrl = API_URL + imdbId;\n      const newMovie = {\n        title, description, imgUrl, imdbId, imdbUrl,\n      };\n      setNewMovie(newMovie);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (newMovie !== null) {\n      const { imdbId } = newMovie;\n      const replay = movies.some(film => film.imdbId === imdbId);\n      setReplay(replay);\n      !replay && addMovie(newMovie);\n      setQueryMovie('');\n    }\n    setNewMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={queryMovie}\n              className={\n                `input ${error ? 'is-danger' : ''}`\n              }\n              onChange={handleQuery}\n            />\n          </div>\n\n          {error && <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchedMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {replay && <p className=\"help is-danger\">\n          This movie is already in the list.\n        </p>}\n        {newMovie && <MovieCard {...newMovie} />}\n      </div>\n    </>\n  )\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component <{}, State> {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie: Movie): void => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }))\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}