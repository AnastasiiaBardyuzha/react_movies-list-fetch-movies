{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api_helpers.ts","components/FindMovie/FindMovie.tsx","index.tsx","App.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getData","url","a","fetch","response","json","FindMovie","addMovie","useState","queryMovie","setQueryMovie","newMovie","setNewMovie","error","setError","isDuplicate","setIsDuplicate","searchedMovie","event","preventDefault","getMovie","movieFromApi","Title","Plot","Poster","imdbID","Response","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","replace","onClick","replay","some","film","ReactDOM","render","data","setMovies","document","getElementById"],"mappings":"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","file":"static/js/main.fb292ed5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","export const API_URL = 'https://www.omdbapi.com/?apikey=2f56ed46&t='\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n}\n","import React, { useState, FC } from 'react';\n\nimport './FindMovie.scss';\nimport { API_URL, getData } from '../../api_helpers';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void\n  movies: Movie[]\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie, movies }) => {\n  const [queryMovie, setQueryMovie] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isDuplicate, setIsDuplicate] = useState(false);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: title } = event.target;\n    const regExp = /^\\s/;\n\n    setQueryMovie(title.replace(regExp, ''));\n    setError(false);\n    setIsDuplicate(false);\n  }\n\n  const searchedMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const getMovie = () => {\n      return getData(`${API_URL}${queryMovie}`);\n    };\n    const movieFromApi = await getMovie();\n\n    const {\n      Title: title,\n      Plot: description,\n      Poster: imgUrl,\n      imdbID: imdbId,\n      Response: response,\n    } = movieFromApi;\n\n    if (response === 'True') {\n      const imdbUrl = API_URL + imdbId;\n      const newMovie = {\n        title, description, imgUrl, imdbId, imdbUrl,\n      };\n      setNewMovie(newMovie);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  }\n\n  const addedNewMovie = () => {\n    if (newMovie) {\n      const { imdbId } = newMovie;\n      const replay = movies.some(film => film.imdbId === imdbId);\n      setIsDuplicate(replay);\n      if (!replay) {\n        addMovie(newMovie);\n      }\n      setQueryMovie('');\n    }\n    setNewMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={searchedMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={queryMovie}\n              className={\n                `input ${error ? 'is-danger' : ''}`\n              }\n              onChange={handleQuery}\n            />\n          </div>\n\n          {error && <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addedNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isDuplicate && <p className=\"help is-danger\">\n          This movie is already in the list.\n        </p>}\n        {newMovie && <MovieCard {...newMovie} />}\n      </div>\n    </>\n  )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addMovie = (movie: Movie): void => {\n\n    setMovies([...movies, movie]);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}